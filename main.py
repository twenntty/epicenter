import telebot
from telebot import types
import sqlite3

TOKEN = '7253772078:AAGI3pDm0Wc9CL3cIPCWTDpbqcmMnO7qV30'
ADMIN_ID = 558372164

bot = telebot.TeleBot(TOKEN)
admin_state = {}

conn = sqlite3.connect('database.db', check_same_thread=False)
cursor = conn.cursor()

cursor.execute('''CREATE TABLE IF NOT EXISTS users (
                      id INTEGER PRIMARY KEY,
                      username TEXT,
                      action TEXT
                  )''')

cursor.execute('''CREATE TABLE IF NOT EXISTS appointments (
                      user_id INTEGER,
                      username TEXT,
                      requested_time TEXT,
                      status TEXT,
                      reason TEXT
                  )''')

cursor.execute('''CREATE TABLE IF NOT EXISTS subscribers (
                      user_id INTEGER PRIMARY KEY
                  )''')
conn.commit()


@bot.message_handler(commands=['start'])
def welcome(message):
    user_id = message.chat.id
    username = message.from_user.username
    cursor.execute('INSERT OR REPLACE INTO users (id, username) VALUES (?, ?)', (user_id, username))
    conn.commit()

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("üß¥ –ó–∞–º–æ–≤–∏—Ç–∏ –∫–æ—Å–º–µ—Ç–∏–∫—É")
    btn2 = types.KeyboardButton("üí¨ –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—è")
    btn3 = types.KeyboardButton("üì¨ –†–æ–∑—Å–∏–ª–∫–∞")
    btn4 = types.KeyboardButton("üóïÔ∏è –ó–∞–ø–∏—Å –Ω–∞ –ø—Ä–∏–π–æ–º")
    btn5 = types.KeyboardButton("üîî –ü—ñ–¥–ø–∏—Å–∞—Ç–∏—Å—è –Ω–∞ —Ä–æ–∑—Å–∏–ª–∫—É")
    btn6 = types.KeyboardButton("‚ùå –í—ñ–¥–ø–∏—Å–∞—Ç–∏—Å—è –≤—ñ–¥ —Ä–æ–∑—Å–∏–ª–∫–∏")

    if user_id == ADMIN_ID:
        btn7 = types.KeyboardButton("/admin")
        markup.add(btn1, btn2, btn3, btn4, btn5, btn6, btn7)
    else:
        markup.add(btn1, btn2, btn3, btn4, btn5, btn6)

    bot.send_message(user_id, "–í—ñ—Ç–∞—é –≤ –±–æ—Ç—ñ –ï–ø—ñ—Ü–µ–Ω—Ç—Ä! –û–±–µ—Ä—ñ—Ç—å –¥—ñ—é:", reply_markup=markup)


@bot.message_handler(func=lambda msg: msg.text == "üîî –ü—ñ–¥–ø–∏—Å–∞—Ç–∏—Å—è –Ω–∞ —Ä–æ–∑—Å–∏–ª–∫—É")
def subscribe(message):
    user_id = message.chat.id
    cursor.execute('INSERT OR REPLACE INTO subscribers (user_id) VALUES (?)', (user_id,))
    conn.commit()
    bot.send_message(user_id, "–í–∏ –ø—ñ–¥–ø–∏—Å–∞–ª–∏—Å—è –Ω–∞ —Ä–æ–∑—Å–∏–ª–∫—É! –í–∏ –±—É–¥–µ—Ç–µ –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏ –Ω–æ–≤–∏–Ω–∏ —Ç–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è.")


@bot.message_handler(func=lambda msg: msg.text == "‚ùå –í—ñ–¥–ø–∏—Å–∞—Ç–∏—Å—è –≤—ñ–¥ —Ä–æ–∑—Å–∏–ª–∫–∏")
def unsubscribe(message):
    user_id = message.chat.id
    cursor.execute('DELETE FROM subscribers WHERE user_id = ?', (user_id,))
    conn.commit()
    bot.send_message(user_id, "–í–∏ –≤—ñ–¥–ø–∏—Å–∞–ª–∏—Å—è –≤—ñ–¥ —Ä–æ–∑—Å–∏–ª–∫–∏. –í–∏ –±—ñ–ª—å—à–µ –Ω–µ –±—É–¥–µ—Ç–µ –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏ –Ω–æ–≤–∏–Ω–∏.")


@bot.message_handler(func=lambda msg: msg.text == "üì¨ –†–æ–∑—Å–∏–ª–∫–∞")
def send_newsletter(message):
    if message.chat.id == ADMIN_ID:
        bot.send_message(ADMIN_ID, "–ù–∞–ø–∏—à—ñ—Ç—å —Ç–µ–∫—Å—Ç —Ä–æ–∑—Å–∏–ª–∫–∏, —è–∫–∏–π –≤–∏ —Ö–æ—á–µ—Ç–µ –≤—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –≤—Å—ñ–º –ø—ñ–¥–ø–∏—Å–Ω–∏–∫–∞–º:")
        admin_state[ADMIN_ID] = 'sending_newsletter'


@bot.message_handler(func=lambda msg: admin_state.get(msg.chat.id) == 'sending_newsletter')
def handle_newsletter(message):
    if message.chat.id == ADMIN_ID:
        newsletter_text = message.text
        cursor.execute('SELECT user_id FROM subscribers')
        subscribers = cursor.fetchall()

        for subscriber in subscribers:
            user_id = subscriber[0]
            try:
                bot.send_message(user_id, newsletter_text)
            except Exception as e:
                print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {e}")

        bot.send_message(ADMIN_ID, "–†–æ–∑—Å–∏–ª–∫–∞ –±—É–ª–∞ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤—Å—ñ–º –ø—ñ–¥–ø–∏—Å–Ω–∏–∫–∞–º.")
        admin_state[ADMIN_ID] = None


@bot.message_handler(func=lambda message: True)
def handle_text(message):
    user_id = message.chat.id
    text = message.text

    cursor.execute('SELECT * FROM users WHERE id = ?', (user_id,))
    user = cursor.fetchone()

    if user and user[2] == 'ordering_cosmetics':
        cursor.execute('INSERT INTO appointments (user_id, username, requested_time, status) VALUES (?, ?, ?, ?)',
                       (user_id, message.from_user.username, text, 'pending'))
        conn.commit()
        cursor.execute('UPDATE users SET action = ? WHERE id = ?', (None, user_id))
        conn.commit()
        bot.send_message(user_id, "–î—è–∫—É—î–º–æ –∑–∞ –≤–∞—à—É –∑–∞—è–≤–∫—É! –ê–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä –∑–≤'—è–∂–µ—Ç—å—Å—è –∑ –≤–∞–º–∏ –Ω–∞–π–±–ª–∏–∂—á–∏–º —á–∞—Å–æ–º.")
        bot.send_message(ADMIN_ID,
                         f"üß¥ –ù–æ–≤–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –ø–æ–∫—É–ø–∫—É –∫–æ—Å–º–µ—Ç–∏–∫–∏:\n–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á: @{message.from_user.username}\n–ó–∞–ø–∏—Ç: {text}\n–ö–æ–Ω—Ç–∞–∫—Ç–∏: @{message.from_user.username}")


@bot.message_handler(commands=['pdecline'])
def decline_appointment(message):
    if message.chat.id != ADMIN_ID:
        return
    try:
        parts = message.text.split()
        user_id = int(parts[1])
        reason = ' '.join(parts[2:]) or '–ë–µ–∑ –ø—Ä–∏—á–∏–Ω–∏'
        cursor.execute('UPDATE appointments SET status = ?, reason = ? WHERE user_id = ? AND status = ?',
                       ('declined', reason, user_id, 'pending'))
        conn.commit()
        bot.send_message(user_id, f"‚ùå –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –≤—ñ–¥—Ö–∏–ª–µ–Ω–∞. –ü—Ä–∏—á–∏–Ω–∞: {reason}")
        bot.send_message(ADMIN_ID, "–ó–∞—è–≤–∫—É –≤—ñ–¥—Ö–∏–ª–µ–Ω–æ.")
    except Exception as e:
        bot.send_message(ADMIN_ID, f"–ü–æ–º–∏–ª–∫–∞: {e}")


@bot.message_handler(commands=['pconfirm'])
def confirm_appointment(message):
    if message.chat.id != ADMIN_ID:
        return
    try:
        parts = message.text.split()
        user_id = int(parts[1])
        cursor.execute('UPDATE appointments SET status = ? WHERE user_id = ? AND status = ?',
                       ('confirmed', user_id, 'pending'))
        conn.commit()
        bot.send_message(user_id, "‚úÖ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–∞! –û—á—ñ–∫—É–π—Ç–µ –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—é.")
        bot.send_message(ADMIN_ID, f"–ó–∞—è–≤–∫–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ @{user_id} –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–∞.")
    except Exception as e:
        bot.send_message(ADMIN_ID, f"–ü–æ–º–∏–ª–∫–∞: {e}")


print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–æ..")
bot.polling(none_stop=True)
